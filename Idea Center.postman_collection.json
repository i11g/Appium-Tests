{
	"info": {
		"_postman_id": "c2ac900d-505a-46ec-9c91-708994331ae0",
		"name": "Idea Center",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28665653"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"}\r",
							")\r",
							"\r",
							"const responseData=pm.response.json()\r",
							"\r",
							"pm.collectionVariables.set(\"accessToken\", responseData.accessToken) \r",
							"\r",
							"pm.test(\"Response body includes email, password and accessToken\", function() {\r",
							"    pm.expect(responseData.email).not.to.be.empty\r",
							"    pm.expect(responseData.password).not.to.be.empty\r",
							"    pm.expect(responseData.accessToken).not.to.be.empty\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\": \"iv@test.com\",\r\n\"password\": \"123456\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Idea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"const responseData = pm.response.json();",
							"",
							"const randomTitleIdea = pm.collectionVariables.get('randomTitle');",
							"",
							"pm.test('Response body includes message Successfully created!', function () {",
							"    pm.expect(responseData.msg).to.include('Successfully created!');",
							"})",
							"",
							"pm.test(\"Ttile and description are correct\", function() {",
							"  pm.expect(responseData.idea.title).to.eql(randomTitleIdea);",
							"  pm.expect(responseData.idea.description).to.eql(\"Description for New Idea with title \" + randomTitleIdea);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomNumber= Math.floor(Math.random()*1000) \r",
							"\r",
							"var randomTitle=\"New title\"+randomNumber\r",
							"\r",
							"pm.collectionVariables.set(\"randomTitle\", randomTitle)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\":\"{{randomTitle}}\",\r\n\"description\":\"Description for New Idea with title {{randomTitle}}\"\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Idea/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Idea",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all Ideas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Removed unnecessary response.text() call",
							"pm.test('Status Code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"    pm.expect(pm.response.json().length).to.be.greaterThan(0);",
							"});",
							"",
							"const responseData = pm.response.json();",
							"const lastIdeaId = responseData[responseData.length - 1].id;",
							"pm.collectionVariables.set(\"lastId\", lastIdeaId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Idea/All",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Idea",
						"All"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Last Idea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseData=pm.response.json() \r",
							"\r",
							"pm.test(\"Response contains message Edited successfully\", function() {\r",
							"    pm.expect(responseData.msg).to.eql(\"Edited successfully\")\r",
							"})\r",
							"\r",
							"pm.test(\"Edited Idea title is correct\", function () {\r",
							"    pm.expect(responseData.title).to.eql(\"Edited title\")\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\":\"Edited Ttile\",\r\n\"description\":\"Edited description for New Idea with title Edited title\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Idea/Edit?ideaId={{lastId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Idea",
						"Edit"
					],
					"query": [
						{
							"key": "ideaId",
							"value": "{{lastId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Idea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseData=pm.response.json() \r",
							"\r",
							"pm.test(\"Response contains message Edited successfully\", function() {\r",
							"    pm.expect(responseData.msg).to.eql(\"Edited successfully\")\r",
							"})\r",
							"\r",
							"pm.test(\"Edited Idea title is correct\", function () {\r",
							"    pm.expect(responseData.title).to.eql(\"Edited title\")\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Idea/Delete?ideaId={{lastId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Idea",
						"Delete"
					],
					"query": [
						{
							"key": "ideaId",
							"value": "{{lastId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://softuni-qa-loadbalancer-2137572849.eu-north-1.elb.amazonaws.com:84  ",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "lastId",
			"value": ""
		}
	]
}